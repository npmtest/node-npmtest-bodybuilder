{"/home/travis/build/npmtest/node-npmtest-bodybuilder/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-bodybuilder/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_bodybuilder */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - init-after","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - init-after","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-bodybuilder/lib.npmtest_bodybuilder.js":{"path":"/home/travis/build/npmtest/node-npmtest-bodybuilder/lib.npmtest_bodybuilder.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":56}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":62}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_bodybuilder */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_bodybuilder = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_bodybuilder = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-bodybuilder/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-bodybuilder/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":55}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":69},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-bodybuilder && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_bodybuilder */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_bodybuilder","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // init-after","    // run browser js-env code - init-after","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_bodybuilder.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_bodybuilder.rollup.js'] =","            local.assetsDict['/assets.npmtest_bodybuilder.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_bodybuilder.__dirname + '/lib.npmtest_bodybuilder.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-bodybuilder/node_modules/bodybuilder/lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-bodybuilder/node_modules/bodybuilder/lib/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":10,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1},"b":{"1":[3,7],"2":[10,10],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":10,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":51,"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":37}}},"2":{"name":"bodybuilder","line":105,"loc":{"start":{"line":105,"column":0},"end":{"line":105,"column":23}}},"3":{"name":"sort","line":116,"loc":{"start":{"line":116,"column":10},"end":{"line":116,"column":31}}},"4":{"name":"(anonymous_4)","line":128,"loc":{"start":{"line":128,"column":37},"end":{"line":128,"column":54}}},"5":{"name":"(anonymous_5)","line":129,"loc":{"start":{"line":129,"column":39},"end":{"line":129,"column":61}}},"6":{"name":"from","line":148,"loc":{"start":{"line":148,"column":10},"end":{"line":148,"column":34}}},"7":{"name":"size","line":160,"loc":{"start":{"line":160,"column":10},"end":{"line":160,"column":34}}},"8":{"name":"rawOption","line":173,"loc":{"start":{"line":173,"column":15},"end":{"line":173,"column":40}}},"9":{"name":"build","line":188,"loc":{"start":{"line":188,"column":11},"end":{"line":188,"column":35}}},"10":{"name":"_buildV1","line":202,"loc":{"start":{"line":202,"column":0},"end":{"line":202,"column":56}}},"11":{"name":"_build","line":221,"loc":{"start":{"line":221,"column":0},"end":{"line":221,"column":54}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":45}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":33}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":41}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":49}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":45}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":53}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":35}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":43}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":53}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":61}},"14":{"start":{"line":31,"column":0},"end":{"line":31,"column":41}},"15":{"start":{"line":33,"column":0},"end":{"line":33,"column":49}},"16":{"start":{"line":35,"column":0},"end":{"line":35,"column":30}},"17":{"start":{"line":37,"column":0},"end":{"line":37,"column":47}},"18":{"start":{"line":39,"column":0},"end":{"line":39,"column":59}},"19":{"start":{"line":41,"column":0},"end":{"line":41,"column":49}},"20":{"start":{"line":43,"column":0},"end":{"line":43,"column":61}},"21":{"start":{"line":45,"column":0},"end":{"line":45,"column":59}},"22":{"start":{"line":47,"column":0},"end":{"line":47,"column":71}},"23":{"start":{"line":49,"column":0},"end":{"line":49,"column":32}},"24":{"start":{"line":51,"column":0},"end":{"line":51,"column":95}},"25":{"start":{"line":51,"column":39},"end":{"line":51,"column":93}},"26":{"start":{"line":105,"column":0},"end":{"line":200,"column":1}},"27":{"start":{"line":106,"column":2},"end":{"line":106,"column":16}},"28":{"start":{"line":108,"column":2},"end":{"line":199,"column":105}},"29":{"start":{"line":117,"column":6},"end":{"line":117,"column":96}},"30":{"start":{"line":119,"column":6},"end":{"line":119,"column":34}},"31":{"start":{"line":121,"column":6},"end":{"line":136,"column":7}},"32":{"start":{"line":123,"column":8},"end":{"line":125,"column":9}},"33":{"start":{"line":124,"column":10},"end":{"line":124,"column":34}},"34":{"start":{"line":127,"column":8},"end":{"line":133,"column":9}},"35":{"start":{"line":128,"column":10},"end":{"line":132,"column":13}},"36":{"start":{"line":129,"column":12},"end":{"line":131,"column":15}},"37":{"start":{"line":130,"column":14},"end":{"line":130,"column":59}},"38":{"start":{"line":135,"column":8},"end":{"line":135,"column":59}},"39":{"start":{"line":137,"column":6},"end":{"line":137,"column":18}},"40":{"start":{"line":149,"column":6},"end":{"line":149,"column":27}},"41":{"start":{"line":150,"column":6},"end":{"line":150,"column":18}},"42":{"start":{"line":161,"column":6},"end":{"line":161,"column":27}},"43":{"start":{"line":162,"column":6},"end":{"line":162,"column":18}},"44":{"start":{"line":174,"column":6},"end":{"line":174,"column":18}},"45":{"start":{"line":175,"column":6},"end":{"line":175,"column":18}},"46":{"start":{"line":189,"column":6},"end":{"line":189,"column":36}},"47":{"start":{"line":190,"column":6},"end":{"line":190,"column":37}},"48":{"start":{"line":191,"column":6},"end":{"line":191,"column":48}},"49":{"start":{"line":193,"column":6},"end":{"line":195,"column":7}},"50":{"start":{"line":194,"column":8},"end":{"line":194,"column":62}},"51":{"start":{"line":197,"column":6},"end":{"line":197,"column":58}},"52":{"start":{"line":202,"column":0},"end":{"line":219,"column":1}},"53":{"start":{"line":203,"column":2},"end":{"line":203,"column":50}},"54":{"start":{"line":205,"column":2},"end":{"line":213,"column":3}},"55":{"start":{"line":206,"column":4},"end":{"line":206,"column":69}},"56":{"start":{"line":208,"column":4},"end":{"line":210,"column":5}},"57":{"start":{"line":209,"column":6},"end":{"line":209,"column":70}},"58":{"start":{"line":211,"column":9},"end":{"line":213,"column":3}},"59":{"start":{"line":212,"column":4},"end":{"line":212,"column":53}},"60":{"start":{"line":215,"column":2},"end":{"line":217,"column":3}},"61":{"start":{"line":216,"column":4},"end":{"line":216,"column":65}},"62":{"start":{"line":218,"column":2},"end":{"line":218,"column":20}},"63":{"start":{"line":221,"column":0},"end":{"line":243,"column":1}},"64":{"start":{"line":222,"column":2},"end":{"line":222,"column":50}},"65":{"start":{"line":224,"column":2},"end":{"line":236,"column":3}},"66":{"start":{"line":225,"column":4},"end":{"line":225,"column":24}},"67":{"start":{"line":226,"column":4},"end":{"line":226,"column":23}},"68":{"start":{"line":227,"column":4},"end":{"line":227,"column":65}},"69":{"start":{"line":228,"column":4},"end":{"line":232,"column":5}},"70":{"start":{"line":229,"column":6},"end":{"line":229,"column":64}},"71":{"start":{"line":230,"column":11},"end":{"line":232,"column":5}},"72":{"start":{"line":231,"column":6},"end":{"line":231,"column":64}},"73":{"start":{"line":233,"column":4},"end":{"line":233,"column":60}},"74":{"start":{"line":234,"column":9},"end":{"line":236,"column":3}},"75":{"start":{"line":235,"column":4},"end":{"line":235,"column":53}},"76":{"start":{"line":238,"column":2},"end":{"line":240,"column":3}},"77":{"start":{"line":239,"column":4},"end":{"line":239,"column":57}},"78":{"start":{"line":242,"column":2},"end":{"line":242,"column":20}},"79":{"start":{"line":245,"column":0},"end":{"line":245,"column":29}}},"branchMap":{"1":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":70},"end":{"line":51,"column":73}},{"start":{"line":51,"column":76},"end":{"line":51,"column":92}}]},"2":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":46},"end":{"line":51,"column":49}},{"start":{"line":51,"column":53},"end":{"line":51,"column":67}}]},"3":{"line":117,"type":"cond-expr","locations":[{"start":{"line":117,"column":75},"end":{"line":117,"column":87}},{"start":{"line":117,"column":90},"end":{"line":117,"column":95}}]},"4":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":22},"end":{"line":117,"column":42}},{"start":{"line":117,"column":46},"end":{"line":117,"column":72}}]},"5":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":18},"end":{"line":119,"column":27}},{"start":{"line":119,"column":31},"end":{"line":119,"column":33}}]},"6":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":6},"end":{"line":121,"column":6}},{"start":{"line":121,"column":6},"end":{"line":121,"column":6}}]},"7":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":123,"column":8}},{"start":{"line":123,"column":8},"end":{"line":123,"column":8}}]},"8":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":8},"end":{"line":127,"column":8}},{"start":{"line":127,"column":8},"end":{"line":127,"column":8}}]},"9":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":6},"end":{"line":193,"column":6}},{"start":{"line":193,"column":6},"end":{"line":193,"column":6}}]},"10":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":2},"end":{"line":205,"column":2}},{"start":{"line":205,"column":2},"end":{"line":205,"column":2}}]},"11":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":4},"end":{"line":208,"column":4}},{"start":{"line":208,"column":4},"end":{"line":208,"column":4}}]},"12":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":9},"end":{"line":211,"column":9}},{"start":{"line":211,"column":9},"end":{"line":211,"column":9}}]},"13":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":2},"end":{"line":215,"column":2}},{"start":{"line":215,"column":2},"end":{"line":215,"column":2}}]},"14":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":2},"end":{"line":224,"column":2}},{"start":{"line":224,"column":2},"end":{"line":224,"column":2}}]},"15":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":4},"end":{"line":228,"column":4}},{"start":{"line":228,"column":4},"end":{"line":228,"column":4}}]},"16":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":11},"end":{"line":230,"column":11}},{"start":{"line":230,"column":11},"end":{"line":230,"column":11}}]},"17":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":9},"end":{"line":234,"column":9}},{"start":{"line":234,"column":9},"end":{"line":234,"column":9}}]},"18":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":2},"end":{"line":238,"column":2}},{"start":{"line":238,"column":2},"end":{"line":238,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _merge = require('lodash/merge');","","var _merge2 = _interopRequireDefault(_merge);","","var _set = require('lodash/set');","","var _set2 = _interopRequireDefault(_set);","","var _isEmpty = require('lodash/isEmpty');","","var _isEmpty2 = _interopRequireDefault(_isEmpty);","","var _cloneDeep = require('lodash/cloneDeep');","","var _cloneDeep2 = _interopRequireDefault(_cloneDeep);","","var _each = require('lodash/each');","","var _each2 = _interopRequireDefault(_each);","","var _isPlainObject = require('lodash/isPlainObject');","","var _isPlainObject2 = _interopRequireDefault(_isPlainObject);","","var _isArray = require('lodash/isArray');","","var _isArray2 = _interopRequireDefault(_isArray);","","exports.default = bodybuilder;","","var _queryBuilder = require('./query-builder');","","var _queryBuilder2 = _interopRequireDefault(_queryBuilder);","","var _filterBuilder = require('./filter-builder');","","var _filterBuilder2 = _interopRequireDefault(_filterBuilder);","","var _aggregationBuilder = require('./aggregation-builder');","","var _aggregationBuilder2 = _interopRequireDefault(_aggregationBuilder);","","var _utils = require('./utils');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * **http://bodybuilder.js.org**"," *"," * **https://github.com/danpaz/bodybuilder**"," *"," * Bodybuilder is a small library that makes elasticsearch queries easier to"," * write, read, and maintain 💪. The whole public api is documented here, but"," * how about a simple example to get started:"," *"," * ```"," * bodybuilder()"," *   .query('match', 'message', 'this is a test')"," *   .build()"," *"," * // results in:"," * {"," *   query: {"," *     match: {"," *       message: 'this is a test'"," *     }"," *   }"," * }"," * ```"," *"," * You can chain multiple methods together to build up a more complex query."," *"," * ```"," * bodybuilder()"," *   .query('match', 'message', 'this is a test')"," *   .filter('term', 'user', 'kimchy')"," *   .notFilter('term', 'user', 'cassie')"," *   .aggregation('terms', 'user')"," *   .build()"," * ```"," *"," * For nested sub-queries or sub-aggregations, pass a function as the last"," * argument and build the nested clause in the body of that function. For"," * example:"," *"," * ```"," * bodybuilder()"," *   .query('nested', 'path', 'obj1', (q) => {"," *     return q.query('match', 'obj1.color', 'blue')"," *   })"," *   .build()"," * ```"," *"," * The entire elasticsearch query DSL is available using the bodybuilder api."," * There are many more examples in the docs as well as in the tests."," *"," * @return {bodybuilder} Builder."," */","function bodybuilder() {","  var body = {};","","  return Object.assign({","    /**","     * Set a sort direction on a given field.","     *","     * @param  {String} field             Field name.","     * @param  {String} [direction='asc'] A valid direction: 'asc' or 'desc'.","     * @returns {bodybuilder} Builder.","     */","    sort: function sort(field) {","      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'asc';","","      body.sort = body.sort || [];","","      if ((0, _isArray2.default)(field)) {","","        if ((0, _isPlainObject2.default)(body.sort)) {","          body.sort = [body.sort];","        }","","        if ((0, _isArray2.default)(body.sort)) {","          (0, _each2.default)(field, function (sorts) {","            (0, _each2.default)(sorts, function (value, key) {","              (0, _utils.sortMerge)(body.sort, key, value);","            });","          });","        }","      } else {","        (0, _utils.sortMerge)(body.sort, field, direction);","      }","      return this;","    },","","","    /**","     * Set a *from* offset value, for paginating a query.","     *","     * @param  {Number} quantity The offset from the first result you want to","     *                           fetch.","     * @returns {bodybuilder} Builder.","     */","    from: function from(quantity) {","      body.from = quantity;","      return this;","    },","","","    /**","     * Set a *size* value for maximum results to return.","     *","     * @param  {Number} quantity Maximum number of results to return.","     * @returns {bodybuilder} Builder.","     */","    size: function size(quantity) {","      body.size = quantity;","      return this;","    },","","","    /**","     * Set any key-value on the elasticsearch body.","     *","     * @param  {String} k Key.","     * @param  {any}    v Value.","     * @returns {bodybuilder} Builder.","     */","    rawOption: function rawOption(k, v) {","      body[k] = v;","      return this;","    },","","","    /**","     * Collect all queries, filters, and aggregations and build the entire","     * elasticsearch query.","     *","     * @param  {string} [version] (optional) Pass `'v1'` to build for the","     *                            elasticsearch 1.x query dsl.","     *","     * @return {Object} Elasticsearch query body.","     */","    build: function build(version) {","      var queries = this.getQuery();","      var filters = this.getFilter();","      var aggregations = this.getAggregations();","","      if (version === 'v1') {","        return _buildV1(body, queries, filters, aggregations);","      }","","      return _build(body, queries, filters, aggregations);","    }","  }, (0, _queryBuilder2.default)(), (0, _filterBuilder2.default)(), (0, _aggregationBuilder2.default)());","}","","function _buildV1(body, queries, filters, aggregations) {","  var clonedBody = (0, _cloneDeep2.default)(body);","","  if (!(0, _isEmpty2.default)(filters)) {","    (0, _set2.default)(clonedBody, 'query.filtered.filter', filters);","","    if (!(0, _isEmpty2.default)(queries)) {","      (0, _set2.default)(clonedBody, 'query.filtered.query', queries);","    }","  } else if (!(0, _isEmpty2.default)(queries)) {","    (0, _set2.default)(clonedBody, 'query', queries);","  }","","  if (!(0, _isEmpty2.default)(aggregations)) {","    (0, _set2.default)(clonedBody, 'aggregations', aggregations);","  }","  return clonedBody;","}","","function _build(body, queries, filters, aggregations) {","  var clonedBody = (0, _cloneDeep2.default)(body);","","  if (!(0, _isEmpty2.default)(filters)) {","    var filterBody = {};","    var queryBody = {};","    (0, _set2.default)(filterBody, 'query.bool.filter', filters);","    if (!(0, _isEmpty2.default)(queries.bool)) {","      (0, _set2.default)(queryBody, 'query.bool', queries.bool);","    } else if (!(0, _isEmpty2.default)(queries)) {","      (0, _set2.default)(queryBody, 'query.bool.must', queries);","    }","    (0, _merge2.default)(clonedBody, filterBody, queryBody);","  } else if (!(0, _isEmpty2.default)(queries)) {","    (0, _set2.default)(clonedBody, 'query', queries);","  }","","  if (!(0, _isEmpty2.default)(aggregations)) {","    (0, _set2.default)(clonedBody, 'aggs', aggregations);","  }","","  return clonedBody;","}","","module.exports = bodybuilder;"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"29":1,"31":1,"33":1,"35":1,"37":1,"39":1,"41":1,"43":1,"45":1,"47":1,"49":1,"51":10,"105":1,"106":0,"108":0,"117":0,"119":0,"121":0,"123":0,"124":0,"127":0,"128":0,"129":0,"130":0,"135":0,"137":0,"149":0,"150":0,"161":0,"162":0,"174":0,"175":0,"189":0,"190":0,"191":0,"193":0,"194":0,"197":0,"202":1,"203":0,"205":0,"206":0,"208":0,"209":0,"211":0,"212":0,"215":0,"216":0,"218":0,"221":1,"222":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"233":0,"234":0,"235":0,"238":0,"239":0,"242":0,"245":1}},"/home/travis/build/npmtest/node-npmtest-bodybuilder/node_modules/bodybuilder/lib/query-builder.js":{"path":"/home/travis/build/npmtest/node-npmtest-bodybuilder/node_modules/bodybuilder/lib/query-builder.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":5,"16":1,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":1,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0},"b":{"1":[1,4],"2":[5,5],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":37}}},"2":{"name":"_defineProperty","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":42}}},"3":{"name":"queryBuilder","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":24}}},"4":{"name":"addMinimumShouldMatch","line":38,"loc":{"start":{"line":38,"column":2},"end":{"line":38,"column":38}}},"5":{"name":"makeQuery","line":45,"loc":{"start":{"line":45,"column":2},"end":{"line":45,"column":42}}},"6":{"name":"query","line":106,"loc":{"start":{"line":106,"column":11},"end":{"line":106,"column":28}}},"7":{"name":"andQuery","line":121,"loc":{"start":{"line":121,"column":14},"end":{"line":121,"column":34}}},"8":{"name":"addQuery","line":131,"loc":{"start":{"line":131,"column":14},"end":{"line":131,"column":34}}},"9":{"name":"orQuery","line":143,"loc":{"start":{"line":143,"column":13},"end":{"line":143,"column":32}}},"10":{"name":"notQuery","line":160,"loc":{"start":{"line":160,"column":14},"end":{"line":160,"column":34}}},"11":{"name":"queryMinimumShouldMatch","line":178,"loc":{"start":{"line":178,"column":29},"end":{"line":178,"column":69}}},"12":{"name":"getQuery","line":182,"loc":{"start":{"line":182,"column":14},"end":{"line":182,"column":34}}},"13":{"name":"hasQuery","line":185,"loc":{"start":{"line":185,"column":14},"end":{"line":185,"column":34}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":43}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":35}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":43}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":47}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":55}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":33}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":41}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":31}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":32}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":49}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":61}},"14":{"start":{"line":31,"column":0},"end":{"line":31,"column":95}},"15":{"start":{"line":31,"column":39},"end":{"line":31,"column":93}},"16":{"start":{"line":33,"column":0},"end":{"line":33,"column":209}},"17":{"start":{"line":33,"column":44},"end":{"line":33,"column":195}},"18":{"start":{"line":33,"column":62},"end":{"line":33,"column":166}},"19":{"start":{"line":33,"column":176},"end":{"line":33,"column":193}},"20":{"start":{"line":33,"column":196},"end":{"line":33,"column":207}},"21":{"start":{"line":35,"column":0},"end":{"line":189,"column":1}},"22":{"start":{"line":36,"column":2},"end":{"line":36,"column":17}},"23":{"start":{"line":38,"column":2},"end":{"line":43,"column":3}},"24":{"start":{"line":39,"column":4},"end":{"line":39,"column":64}},"25":{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},"26":{"start":{"line":41,"column":6},"end":{"line":41,"column":47}},"27":{"start":{"line":45,"column":2},"end":{"line":64,"column":3}},"28":{"start":{"line":46,"column":4},"end":{"line":46,"column":20}},"29":{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},"30":{"start":{"line":49,"column":6},"end":{"line":49,"column":39}},"31":{"start":{"line":52,"column":4},"end":{"line":61,"column":5}},"32":{"start":{"line":53,"column":6},"end":{"line":53,"column":38}},"33":{"start":{"line":54,"column":6},"end":{"line":54,"column":107}},"34":{"start":{"line":55,"column":6},"end":{"line":57,"column":7}},"35":{"start":{"line":56,"column":8},"end":{"line":56,"column":47}},"36":{"start":{"line":58,"column":6},"end":{"line":60,"column":7}},"37":{"start":{"line":59,"column":8},"end":{"line":59,"column":49}},"38":{"start":{"line":63,"column":4},"end":{"line":63,"column":149}},"39":{"start":{"line":66,"column":2},"end":{"line":188,"column":4}},"40":{"start":{"line":107,"column":6},"end":{"line":109,"column":7}},"41":{"start":{"line":108,"column":8},"end":{"line":108,"column":39}},"42":{"start":{"line":111,"column":6},"end":{"line":111,"column":55}},"43":{"start":{"line":112,"column":6},"end":{"line":112,"column":18}},"44":{"start":{"line":122,"column":6},"end":{"line":122,"column":47}},"45":{"start":{"line":132,"column":6},"end":{"line":132,"column":47}},"46":{"start":{"line":144,"column":6},"end":{"line":146,"column":7}},"47":{"start":{"line":145,"column":8},"end":{"line":145,"column":39}},"48":{"start":{"line":148,"column":6},"end":{"line":148,"column":54}},"49":{"start":{"line":149,"column":6},"end":{"line":149,"column":18}},"50":{"start":{"line":161,"column":6},"end":{"line":163,"column":7}},"51":{"start":{"line":162,"column":8},"end":{"line":162,"column":39}},"52":{"start":{"line":165,"column":6},"end":{"line":165,"column":55}},"53":{"start":{"line":166,"column":6},"end":{"line":166,"column":18}},"54":{"start":{"line":179,"column":6},"end":{"line":179,"column":35}},"55":{"start":{"line":180,"column":6},"end":{"line":180,"column":18}},"56":{"start":{"line":183,"column":6},"end":{"line":183,"column":19}},"57":{"start":{"line":186,"column":6},"end":{"line":186,"column":42}}},"branchMap":{"1":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":70},"end":{"line":31,"column":73}},{"start":{"line":31,"column":76},"end":{"line":31,"column":92}}]},"2":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":46},"end":{"line":31,"column":49}},{"start":{"line":31,"column":53},"end":{"line":31,"column":67}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":44},"end":{"line":33,"column":44}},{"start":{"line":33,"column":44},"end":{"line":33,"column":44}}]},"4":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]},"5":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":8},"end":{"line":40,"column":20}},{"start":{"line":40,"column":24},"end":{"line":40,"column":47}}]},"6":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"7":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":6},"end":{"line":55,"column":6}},{"start":{"line":55,"column":6},"end":{"line":55,"column":6}}]},"8":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":6},"end":{"line":58,"column":6}},{"start":{"line":58,"column":6},"end":{"line":58,"column":6}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _size = require('lodash/size');","","var _size2 = _interopRequireDefault(_size);","","var _last = require('lodash/last');","","var _last2 = _interopRequireDefault(_last);","","var _isFunction = require('lodash/isFunction');","","var _isFunction2 = _interopRequireDefault(_isFunction);","","var _get = require('lodash/get');","","var _get2 = _interopRequireDefault(_get);","","exports.default = queryBuilder;","","var _utils = require('./utils');","","var _filterBuilder = require('./filter-builder');","","var _filterBuilder2 = _interopRequireDefault(_filterBuilder);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }","","function queryBuilder() {","  var query = {};","","  function addMinimumShouldMatch(str) {","    var shouldClause = (0, _get2.default)(query, 'bool.should');","    if (shouldClause && shouldClause.length > 1) {","      query.bool['minimum_should_match'] = str;","    }","  }","","  function makeQuery(boolType, queryType) {","    var nested = {};","","    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {","      args[_key - 2] = arguments[_key];","    }","","    if ((0, _isFunction2.default)((0, _last2.default)(args))) {","      var nestedCallback = args.pop();","      var nestedResult = nestedCallback(Object.assign({}, queryBuilder(), (0, _filterBuilder2.default)()));","      if (nestedResult.hasQuery()) {","        nested.query = nestedResult.getQuery();","      }","      if (nestedResult.hasFilter()) {","        nested.filter = nestedResult.getFilter();","      }","    }","","    query = (0, _utils.boolMerge)(_defineProperty({}, queryType, Object.assign(_utils.buildClause.apply(undefined, args), nested)), query, boolType);","  }","","  return {","    /**","     * Add a query clause to the query body.","     *","     * @param  {string}        type    Query type.","     * @param  {string|Object} field   Field to query or complete query clause.","     * @param  {string|Object} value   Query term or inner clause.","     * @param  {Object}        options (optional) Additional options for the","     *                                 query clause.","     * @param  {Function}      [nest]  (optional) A function used to define","     *                                 sub-filters as children. This _must_ be","     *                                 the last argument.","     *","     * @return {bodybuilder} Builder.","     *","     * @example","     * bodybuilder()","     *   .query('match_all')","     *   .build()","     *","     * bodybuilder()","     *   .query('match_all', { boost: 1.2 })","     *   .build()","     *","     * bodybuilder()","     *   .query('match', 'message', 'this is a test')","     *   .build()","     *","     * bodybuilder()","     *   .query('terms', 'user', ['kimchy', 'elastic'])","     *   .build()","     *","     * bodybuilder()","     *   .query('nested', { path: 'obj1', score_mode: 'avg' }, (q) => {","     *     return q","     *       .query('match', 'obj1.name', 'blue')","     *       .query('range', 'obj1.count', {gt: 5})","     *   })","     *   .build()","     */","    query: function query() {","      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {","        args[_key2] = arguments[_key2];","      }","","      makeQuery.apply(undefined, ['and'].concat(args));","      return this;","    },","","","    /**","     * Alias for `query`.","     *","     * @return {bodybuilder} Builder.","     */","    andQuery: function andQuery() {","      return this.query.apply(this, arguments);","    },","","","    /**","     * Alias for `query`.","     *","     * @return {bodybuilder} Builder.","     */","    addQuery: function addQuery() {","      return this.query.apply(this, arguments);","    },","","","    /**","     * Add a \"should\" query to the query body.","     *","     * Same arguments as `query`.","     *","     * @return {bodybuilder} Builder.","     */","    orQuery: function orQuery() {","      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {","        args[_key3] = arguments[_key3];","      }","","      makeQuery.apply(undefined, ['or'].concat(args));","      return this;","    },","","","    /**","     * Add a \"must_not\" query to the query body.","     *","     * Same arguments as `query`.","     *","     * @return {bodybuilder} Builder.","     */","    notQuery: function notQuery() {","      for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {","        args[_key4] = arguments[_key4];","      }","","      makeQuery.apply(undefined, ['not'].concat(args));","      return this;","    },","","","    /**","     * Set the `minimum_should_match` property on a bool query with more than","     * one `should` clause.","     *","     * @param  {any} param  minimum_should_match parameter. For possible values","     *                      see https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-minimum-should-match.html","     * @return {bodybuilder} Builder.","     */","    queryMinimumShouldMatch: function queryMinimumShouldMatch(param) {","      addMinimumShouldMatch(param);","      return this;","    },","    getQuery: function getQuery() {","      return query;","    },","    hasQuery: function hasQuery() {","      return !!(0, _size2.default)(query);","    }","  };","}"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"29":1,"31":5,"33":1,"35":1,"36":0,"38":1,"39":0,"40":0,"41":0,"45":1,"46":0,"48":0,"49":0,"52":0,"53":0,"54":0,"55":0,"56":0,"58":0,"59":0,"63":0,"66":0,"107":0,"108":0,"111":0,"112":0,"122":0,"132":0,"144":0,"145":0,"148":0,"149":0,"161":0,"162":0,"165":0,"166":0,"179":0,"180":0,"183":0,"186":0}},"/home/travis/build/npmtest/node-npmtest-bodybuilder/node_modules/bodybuilder/lib/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-bodybuilder/node_modules/bodybuilder/lib/utils.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":10,"28":1,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0},"b":{"1":[1,9],"2":[10,10],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":10,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":37}}},"2":{"name":"_defineProperty","line":54,"loc":{"start":{"line":54,"column":0},"end":{"line":54,"column":42}}},"3":{"name":"mergeConcat","line":65,"loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":23}}},"4":{"name":"customizer","line":67,"loc":{"start":{"line":67,"column":12},"end":{"line":67,"column":38}}},"5":{"name":"boolMerge","line":89,"loc":{"start":{"line":89,"column":0},"end":{"line":89,"column":39}}},"6":{"name":"sortMerge","line":121,"loc":{"start":{"line":121,"column":0},"end":{"line":121,"column":42}}},"7":{"name":"(anonymous_7)","line":130,"loc":{"start":{"line":130,"column":46},"end":{"line":130,"column":59}}},"8":{"name":"buildClause","line":154,"loc":{"start":{"line":154,"column":0},"end":{"line":154,"column":41}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":51}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":45}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":39}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":47}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":45}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":53}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":39}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":47}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":41}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":49}},"14":{"start":{"line":31,"column":0},"end":{"line":31,"column":41}},"15":{"start":{"line":33,"column":0},"end":{"line":33,"column":49}},"16":{"start":{"line":35,"column":0},"end":{"line":35,"column":47}},"17":{"start":{"line":37,"column":0},"end":{"line":37,"column":55}},"18":{"start":{"line":39,"column":0},"end":{"line":39,"column":53}},"19":{"start":{"line":41,"column":0},"end":{"line":41,"column":61}},"20":{"start":{"line":43,"column":0},"end":{"line":43,"column":34}},"21":{"start":{"line":44,"column":0},"end":{"line":44,"column":30}},"22":{"start":{"line":45,"column":0},"end":{"line":45,"column":30}},"23":{"start":{"line":46,"column":0},"end":{"line":46,"column":34}},"24":{"start":{"line":48,"column":0},"end":{"line":48,"column":41}},"25":{"start":{"line":50,"column":0},"end":{"line":50,"column":53}},"26":{"start":{"line":52,"column":0},"end":{"line":52,"column":95}},"27":{"start":{"line":52,"column":39},"end":{"line":52,"column":93}},"28":{"start":{"line":54,"column":0},"end":{"line":54,"column":209}},"29":{"start":{"line":54,"column":44},"end":{"line":54,"column":195}},"30":{"start":{"line":54,"column":62},"end":{"line":54,"column":166}},"31":{"start":{"line":54,"column":176},"end":{"line":54,"column":193}},"32":{"start":{"line":54,"column":196},"end":{"line":54,"column":207}},"33":{"start":{"line":65,"column":0},"end":{"line":77,"column":1}},"34":{"start":{"line":66,"column":2},"end":{"line":66,"column":54}},"35":{"start":{"line":67,"column":2},"end":{"line":75,"column":5}},"36":{"start":{"line":68,"column":4},"end":{"line":74,"column":5}},"37":{"start":{"line":69,"column":6},"end":{"line":69,"column":57}},"38":{"start":{"line":70,"column":11},"end":{"line":74,"column":5}},"39":{"start":{"line":71,"column":6},"end":{"line":71,"column":25}},"40":{"start":{"line":73,"column":6},"end":{"line":73,"column":15}},"41":{"start":{"line":76,"column":2},"end":{"line":76,"column":48}},"42":{"start":{"line":89,"column":0},"end":{"line":109,"column":1}},"43":{"start":{"line":90,"column":2},"end":{"line":90,"column":91}},"44":{"start":{"line":92,"column":2},"end":{"line":92,"column":27}},"45":{"start":{"line":93,"column":2},"end":{"line":93,"column":23}},"46":{"start":{"line":96,"column":2},"end":{"line":102,"column":3}},"47":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"48":{"start":{"line":99,"column":6},"end":{"line":99,"column":56}},"49":{"start":{"line":101,"column":4},"end":{"line":101,"column":18}},"50":{"start":{"line":105,"column":2},"end":{"line":105,"column":92}},"51":{"start":{"line":106,"column":2},"end":{"line":106,"column":78}},"52":{"start":{"line":108,"column":2},"end":{"line":108,"column":47}},"53":{"start":{"line":121,"column":0},"end":{"line":141,"column":1}},"54":{"start":{"line":122,"column":2},"end":{"line":122,"column":23}},"55":{"start":{"line":124,"column":2},"end":{"line":128,"column":3}},"56":{"start":{"line":125,"column":4},"end":{"line":125,"column":75}},"57":{"start":{"line":127,"column":4},"end":{"line":127,"column":59}},"58":{"start":{"line":130,"column":2},"end":{"line":132,"column":5}},"59":{"start":{"line":131,"column":4},"end":{"line":131,"column":33}},"60":{"start":{"line":134,"column":2},"end":{"line":138,"column":3}},"61":{"start":{"line":135,"column":4},"end":{"line":135,"column":26}},"62":{"start":{"line":137,"column":4},"end":{"line":137,"column":49}},"63":{"start":{"line":140,"column":2},"end":{"line":140,"column":17}},"64":{"start":{"line":154,"column":0},"end":{"line":168,"column":1}},"65":{"start":{"line":155,"column":2},"end":{"line":155,"column":46}},"66":{"start":{"line":156,"column":2},"end":{"line":156,"column":46}},"67":{"start":{"line":157,"column":2},"end":{"line":157,"column":22}},"68":{"start":{"line":159,"column":2},"end":{"line":165,"column":3}},"69":{"start":{"line":160,"column":4},"end":{"line":160,"column":51}},"70":{"start":{"line":161,"column":9},"end":{"line":165,"column":3}},"71":{"start":{"line":162,"column":4},"end":{"line":162,"column":23}},"72":{"start":{"line":163,"column":9},"end":{"line":165,"column":3}},"73":{"start":{"line":164,"column":4},"end":{"line":164,"column":34}},"74":{"start":{"line":167,"column":2},"end":{"line":167,"column":45}}},"branchMap":{"1":{"line":52,"type":"cond-expr","locations":[{"start":{"line":52,"column":70},"end":{"line":52,"column":73}},{"start":{"line":52,"column":76},"end":{"line":52,"column":92}}]},"2":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":46},"end":{"line":52,"column":49}},{"start":{"line":52,"column":53},"end":{"line":52,"column":67}}]},"3":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":44},"end":{"line":54,"column":44}},{"start":{"line":54,"column":44},"end":{"line":54,"column":44}}]},"4":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"5":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":11},"end":{"line":70,"column":11}},{"start":{"line":70,"column":11},"end":{"line":70,"column":11}}]},"6":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":70},"end":{"line":90,"column":82}},{"start":{"line":90,"column":85},"end":{"line":90,"column":90}}]},"7":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":17},"end":{"line":90,"column":37}},{"start":{"line":90,"column":41},"end":{"line":90,"column":67}}]},"8":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":2},"end":{"line":96,"column":2}},{"start":{"line":96,"column":2},"end":{"line":96,"column":2}}]},"9":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":98,"column":4}},{"start":{"line":98,"column":4},"end":{"line":98,"column":4}}]},"10":{"line":105,"type":"cond-expr","locations":[{"start":{"line":105,"column":34},"end":{"line":105,"column":44}},{"start":{"line":105,"column":47},"end":{"line":105,"column":91}}]},"11":{"line":106,"type":"cond-expr","locations":[{"start":{"line":106,"column":26},"end":{"line":106,"column":32}},{"start":{"line":106,"column":35},"end":{"line":106,"column":77}}]},"12":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":2},"end":{"line":124,"column":2}},{"start":{"line":124,"column":2},"end":{"line":124,"column":2}}]},"13":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":2},"end":{"line":134,"column":2}},{"start":{"line":134,"column":2},"end":{"line":134,"column":2}}]},"14":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":2},"end":{"line":159,"column":2}},{"start":{"line":159,"column":2},"end":{"line":159,"column":2}}]},"15":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":9},"end":{"line":161,"column":9}},{"start":{"line":161,"column":9},"end":{"line":161,"column":9}}]},"16":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":9},"end":{"line":163,"column":9}},{"start":{"line":163,"column":9},"end":{"line":163,"column":9}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _isObject = require('lodash/isObject');","","var _isObject2 = _interopRequireDefault(_isObject);","","var _isNil = require('lodash/isNil');","","var _isNil2 = _interopRequireDefault(_isNil);","","var _extend = require('lodash/extend');","","var _extend2 = _interopRequireDefault(_extend);","","var _findIndex = require('lodash/findIndex');","","var _findIndex2 = _interopRequireDefault(_findIndex);","","var _assign = require('lodash/assign');","","var _assign2 = _interopRequireDefault(_assign);","","var _isEmpty = require('lodash/isEmpty');","","var _isEmpty2 = _interopRequireDefault(_isEmpty);","","var _isArray = require('lodash/isArray');","","var _isArray2 = _interopRequireDefault(_isArray);","","var _assignWith = require('lodash/assignWith');","","var _assignWith2 = _interopRequireDefault(_assignWith);","","var _isPlainObject = require('lodash/isPlainObject');","","var _isPlainObject2 = _interopRequireDefault(_isPlainObject);","","exports.mergeConcat = mergeConcat;","exports.boolMerge = boolMerge;","exports.sortMerge = sortMerge;","exports.buildClause = buildClause;","","var _boolQuery = require('./bool-query');","","var _boolQuery2 = _interopRequireDefault(_boolQuery);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }","","/**"," * Extends lodash's assignWith by allowing array concatenation"," * and deep merging."," *"," * @private"," *"," * @param {Object} target Target."," * @returns {Object} Merged object."," */","function mergeConcat() {","  var args = Array.prototype.slice.call(arguments, 0);","  args.push(function customizer(a, b) {","    if ((0, _isPlainObject2.default)(a)) {","      return (0, _assignWith2.default)(a, b, customizer);","    } else if ((0, _isArray2.default)(a)) {","      return a.concat(b);","    } else {","      return b;","    }","  });","  return _assignWith2.default.apply(null, args);","}","","/**"," * Merge two filters or queries using their Boolean counterparts."," *"," * @private"," *"," * @param  {Object} newObj      New filter or query to add."," * @param  {Object} currentObj  Old filter or query to merge into."," * @param  {String} boolType    Type of boolean ('and', 'or', 'not')."," * @returns {Object} Combined filter or query."," */","function boolMerge(newObj, currentObj) {","  var boolType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'and';","","  var boolCurrent = void 0;","  var boolNew = void 0;","","  // Only one, no need for bool.","  if ((0, _isEmpty2.default)(currentObj)) {","    // Allow starting with 'or' and 'not' queries.","    if (boolType !== 'and') {","      return (0, _boolQuery2.default)(boolType, newObj);","    }","    return newObj;","  }","","  // Make bools out of the new and existing filters.","  boolCurrent = currentObj.bool ? currentObj : (0, _boolQuery2.default)('must', currentObj);","  boolNew = newObj.bool ? newObj : (0, _boolQuery2.default)(boolType, newObj);","","  return mergeConcat({}, boolCurrent, boolNew);","}","","/**"," * Compound sort function into the list of sorts"," *"," * @private"," *"," * @param  {Array} current Array of Elasticsearch sorts."," * @param  {String} field Field to sort."," * @param  {String|Object} value A valid direction ('asc', 'desc') or object with sort options"," * @returns {Array} Array of Elasticsearch sorts."," */","function sortMerge(current, field, value) {","  var payload = void 0;","","  if ((0, _isPlainObject2.default)(value)) {","    payload = _defineProperty({}, field, (0, _assign2.default)({}, value));","  } else {","    payload = _defineProperty({}, field, { order: value });","  }","","  var idx = (0, _findIndex2.default)(current, function (o) {","    return o[field] != undefined;","  });","","  if (idx == -1) {","    current.push(payload);","  } else {","    (0, _extend2.default)(current[idx], payload);","  }","","  return current;","}","","/**"," * Generic builder for query, filter, or aggregation clauses."," *"," * @private"," *"," * @param  {string|Object} field Field name or complete clause."," * @param  {string|Object} value Field value or inner clause."," * @param  {Object}        opts  Additional key-value pairs."," *"," * @return {Object} Clause"," */","function buildClause(field, value, opts) {","  var hasField = !(0, _isNil2.default)(field);","  var hasValue = !(0, _isNil2.default)(value);","  var mainClause = {};","","  if (hasValue) {","    mainClause = _defineProperty({}, field, value);","  } else if ((0, _isObject2.default)(field)) {","    mainClause = field;","  } else if (hasField) {","    mainClause = { field: field };","  }","","  return Object.assign({}, mainClause, opts);","}"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"29":1,"31":1,"33":1,"35":1,"37":1,"39":1,"41":1,"43":1,"44":1,"45":1,"46":1,"48":1,"50":1,"52":10,"54":1,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"73":0,"76":0,"89":1,"90":0,"92":0,"93":0,"96":0,"98":0,"99":0,"101":0,"105":0,"106":0,"108":0,"121":1,"122":0,"124":0,"125":0,"127":0,"130":0,"131":0,"134":0,"135":0,"137":0,"140":0,"154":1,"155":0,"156":0,"157":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"167":0}},"/home/travis/build/npmtest/node-npmtest-bodybuilder/node_modules/bodybuilder/lib/bool-query.js":{"path":"/home/travis/build/npmtest/node-npmtest-bodybuilder/node_modules/bodybuilder/lib/bool-query.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"_defineProperty","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}}},"2":{"name":"boolQuery","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":209}},"4":{"start":{"line":8,"column":44},"end":{"line":8,"column":195}},"5":{"start":{"line":8,"column":62},"end":{"line":8,"column":166}},"6":{"start":{"line":8,"column":176},"end":{"line":8,"column":193}},"7":{"start":{"line":8,"column":196},"end":{"line":8,"column":207}},"8":{"start":{"line":10,"column":0},"end":{"line":18,"column":2}},"9":{"start":{"line":30,"column":0},"end":{"line":35,"column":1}},"10":{"start":{"line":31,"column":2},"end":{"line":31,"column":39}},"11":{"start":{"line":32,"column":2},"end":{"line":34,"column":4}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":44},"end":{"line":8,"column":44}},{"start":{"line":8,"column":44},"end":{"line":8,"column":44}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = boolQuery;","","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }","","var CONDITIONS_MAP = {","  must: 'must',","  should: 'should',","  must_not: 'must_not',","  mustNot: 'must_not',","  and: 'must',","  or: 'should',","  not: 'must_not'","};","","/**"," * Construct a Boolean query."," *"," * @private"," * @memberof Queries"," *"," * @param  {String} condition Boolean condition: must, must_not, should."," * @param  {Object} query     Fully-formed query."," * @return {Object}           Boolean query."," */","function boolQuery(condition, query) {","  var cond = CONDITIONS_MAP[condition];","  return {","    bool: _defineProperty({}, cond, [query])","  };","}"],"l":{"3":1,"6":1,"8":1,"10":1,"30":1,"31":0,"32":0}},"/home/travis/build/npmtest/node-npmtest-bodybuilder/node_modules/bodybuilder/lib/filter-builder.js":{"path":"/home/travis/build/npmtest/node-npmtest-bodybuilder/node_modules/bodybuilder/lib/filter-builder.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":6,"18":1,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":1,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0},"b":{"1":[2,4],"2":[6,6],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":6,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":37}}},"2":{"name":"_defineProperty","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":42}}},"3":{"name":"filterBuilder","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":25}}},"4":{"name":"addMinimumShouldMatch","line":42,"loc":{"start":{"line":42,"column":2},"end":{"line":42,"column":38}}},"5":{"name":"makeFilter","line":49,"loc":{"start":{"line":49,"column":2},"end":{"line":49,"column":44}}},"6":{"name":"filter","line":94,"loc":{"start":{"line":94,"column":12},"end":{"line":94,"column":30}}},"7":{"name":"andFilter","line":109,"loc":{"start":{"line":109,"column":15},"end":{"line":109,"column":36}}},"8":{"name":"addFilter","line":119,"loc":{"start":{"line":119,"column":15},"end":{"line":119,"column":36}}},"9":{"name":"orFilter","line":131,"loc":{"start":{"line":131,"column":14},"end":{"line":131,"column":34}}},"10":{"name":"notFilter","line":148,"loc":{"start":{"line":148,"column":15},"end":{"line":148,"column":36}}},"11":{"name":"filterMinimumShouldMatch","line":166,"loc":{"start":{"line":166,"column":30},"end":{"line":166,"column":71}}},"12":{"name":"getFilter","line":170,"loc":{"start":{"line":170,"column":15},"end":{"line":170,"column":36}}},"13":{"name":"hasFilter","line":173,"loc":{"start":{"line":173,"column":15},"end":{"line":173,"column":36}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":43}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":35}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":43}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":47}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":55}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":33}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":41}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":32}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":32}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":47}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":59}},"14":{"start":{"line":31,"column":0},"end":{"line":31,"column":59}},"15":{"start":{"line":33,"column":0},"end":{"line":33,"column":71}},"16":{"start":{"line":35,"column":0},"end":{"line":35,"column":95}},"17":{"start":{"line":35,"column":39},"end":{"line":35,"column":93}},"18":{"start":{"line":37,"column":0},"end":{"line":37,"column":209}},"19":{"start":{"line":37,"column":44},"end":{"line":37,"column":195}},"20":{"start":{"line":37,"column":62},"end":{"line":37,"column":166}},"21":{"start":{"line":37,"column":176},"end":{"line":37,"column":193}},"22":{"start":{"line":37,"column":196},"end":{"line":37,"column":207}},"23":{"start":{"line":39,"column":0},"end":{"line":177,"column":1}},"24":{"start":{"line":40,"column":2},"end":{"line":40,"column":18}},"25":{"start":{"line":42,"column":2},"end":{"line":47,"column":3}},"26":{"start":{"line":43,"column":4},"end":{"line":43,"column":65}},"27":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"28":{"start":{"line":45,"column":6},"end":{"line":45,"column":48}},"29":{"start":{"line":49,"column":2},"end":{"line":71,"column":3}},"30":{"start":{"line":50,"column":4},"end":{"line":50,"column":20}},"31":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"32":{"start":{"line":53,"column":6},"end":{"line":53,"column":39}},"33":{"start":{"line":56,"column":4},"end":{"line":68,"column":5}},"34":{"start":{"line":57,"column":6},"end":{"line":57,"column":38}},"35":{"start":{"line":58,"column":6},"end":{"line":58,"column":144}},"36":{"start":{"line":59,"column":6},"end":{"line":61,"column":7}},"37":{"start":{"line":60,"column":8},"end":{"line":60,"column":47}},"38":{"start":{"line":62,"column":6},"end":{"line":64,"column":7}},"39":{"start":{"line":63,"column":8},"end":{"line":63,"column":49}},"40":{"start":{"line":65,"column":6},"end":{"line":67,"column":7}},"41":{"start":{"line":66,"column":8},"end":{"line":66,"column":53}},"42":{"start":{"line":70,"column":4},"end":{"line":70,"column":152}},"43":{"start":{"line":73,"column":2},"end":{"line":176,"column":4}},"44":{"start":{"line":95,"column":6},"end":{"line":97,"column":7}},"45":{"start":{"line":96,"column":8},"end":{"line":96,"column":39}},"46":{"start":{"line":99,"column":6},"end":{"line":99,"column":56}},"47":{"start":{"line":100,"column":6},"end":{"line":100,"column":18}},"48":{"start":{"line":110,"column":6},"end":{"line":110,"column":48}},"49":{"start":{"line":120,"column":6},"end":{"line":120,"column":48}},"50":{"start":{"line":132,"column":6},"end":{"line":134,"column":7}},"51":{"start":{"line":133,"column":8},"end":{"line":133,"column":39}},"52":{"start":{"line":136,"column":6},"end":{"line":136,"column":55}},"53":{"start":{"line":137,"column":6},"end":{"line":137,"column":18}},"54":{"start":{"line":149,"column":6},"end":{"line":151,"column":7}},"55":{"start":{"line":150,"column":8},"end":{"line":150,"column":39}},"56":{"start":{"line":153,"column":6},"end":{"line":153,"column":56}},"57":{"start":{"line":154,"column":6},"end":{"line":154,"column":18}},"58":{"start":{"line":167,"column":6},"end":{"line":167,"column":35}},"59":{"start":{"line":168,"column":6},"end":{"line":168,"column":18}},"60":{"start":{"line":171,"column":6},"end":{"line":171,"column":20}},"61":{"start":{"line":174,"column":6},"end":{"line":174,"column":43}}},"branchMap":{"1":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":70},"end":{"line":35,"column":73}},{"start":{"line":35,"column":76},"end":{"line":35,"column":92}}]},"2":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":46},"end":{"line":35,"column":49}},{"start":{"line":35,"column":53},"end":{"line":35,"column":67}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":44},"end":{"line":37,"column":44}},{"start":{"line":37,"column":44},"end":{"line":37,"column":44}}]},"4":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":20}},{"start":{"line":44,"column":24},"end":{"line":44,"column":47}}]},"6":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"7":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":6},"end":{"line":59,"column":6}},{"start":{"line":59,"column":6},"end":{"line":59,"column":6}}]},"8":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":6},"end":{"line":62,"column":6}},{"start":{"line":62,"column":6},"end":{"line":62,"column":6}}]},"9":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":6},"end":{"line":65,"column":6}},{"start":{"line":65,"column":6},"end":{"line":65,"column":6}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _size = require('lodash/size');","","var _size2 = _interopRequireDefault(_size);","","var _last = require('lodash/last');","","var _last2 = _interopRequireDefault(_last);","","var _isFunction = require('lodash/isFunction');","","var _isFunction2 = _interopRequireDefault(_isFunction);","","var _get = require('lodash/get');","","var _get2 = _interopRequireDefault(_get);","","exports.default = filterBuilder;","","var _utils = require('./utils');","","var _queryBuilder = require('./query-builder');","","var _queryBuilder2 = _interopRequireDefault(_queryBuilder);","","var _aggregationBuilder = require('./aggregation-builder');","","var _aggregationBuilder2 = _interopRequireDefault(_aggregationBuilder);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }","","function filterBuilder() {","  var filter = {};","","  function addMinimumShouldMatch(str) {","    var shouldClause = (0, _get2.default)(filter, 'bool.should');","    if (shouldClause && shouldClause.length > 1) {","      filter.bool['minimum_should_match'] = str;","    }","  }","","  function makeFilter(boolType, filterType) {","    var nested = {};","","    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {","      args[_key - 2] = arguments[_key];","    }","","    if ((0, _isFunction2.default)((0, _last2.default)(args))) {","      var nestedCallback = args.pop();","      var nestedResult = nestedCallback(Object.assign({}, (0, _queryBuilder2.default)(), filterBuilder(), (0, _aggregationBuilder2.default)()));","      if (nestedResult.hasQuery()) {","        nested.query = nestedResult.getQuery();","      }","      if (nestedResult.hasFilter()) {","        nested.filter = nestedResult.getFilter();","      }","      if (nestedResult.hasAggregations()) {","        nested.aggs = nestedResult.getAggregations();","      }","    }","","    filter = (0, _utils.boolMerge)(_defineProperty({}, filterType, Object.assign(_utils.buildClause.apply(undefined, args), nested)), filter, boolType);","  }","","  return {","    /**","     * Add a filter clause to the query body.","     *","     * @param  {string}        type    Filter type.","     * @param  {string|Object} field   Field to filter or complete filter","     *                                 clause.","     * @param  {string|Object} value   Filter term or inner clause.","     * @param  {Object}        options (optional) Additional options for the","     *                                 filter clause.","     * @param  {Function}      [nest]  (optional) A function used to define","     *                                 sub-filters as children. This _must_ be","     *                                 the last argument.","     *","     * @return {bodybuilder} Builder.","     *","     * @example","     * bodybuilder()","     *   .filter('term', 'user', 'kimchy')","     *   .build()","     */","    filter: function filter() {","      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {","        args[_key2] = arguments[_key2];","      }","","      makeFilter.apply(undefined, ['and'].concat(args));","      return this;","    },","","","    /**","     * Alias for `filter`.","     *","     * @return {bodybuilder} Builder.","     */","    andFilter: function andFilter() {","      return this.filter.apply(this, arguments);","    },","","","    /**","     * Alias for `filter`.","     *","     * @return {bodybuilder} Builder.","     */","    addFilter: function addFilter() {","      return this.filter.apply(this, arguments);","    },","","","    /**","     * Add a \"should\" filter to the query body.","     *","     * Same arguments as `filter`.","     *","     * @return {bodybuilder} Builder.","     */","    orFilter: function orFilter() {","      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {","        args[_key3] = arguments[_key3];","      }","","      makeFilter.apply(undefined, ['or'].concat(args));","      return this;","    },","","","    /**","     * Add a \"must_not\" filter to the query body.","     *","     * Same arguments as `filter`.","     *","     * @return {bodybuilder} Builder.","     */","    notFilter: function notFilter() {","      for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {","        args[_key4] = arguments[_key4];","      }","","      makeFilter.apply(undefined, ['not'].concat(args));","      return this;","    },","","","    /**","     * Set the `minimum_should_match` property on a bool filter with more than","     * one `should` clause.","     *","     * @param  {any} param  minimum_should_match parameter. For possible values","     *                      see https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-minimum-should-match.html","     * @return {bodybuilder} Builder.","     */","    filterMinimumShouldMatch: function filterMinimumShouldMatch(param) {","      addMinimumShouldMatch(param);","      return this;","    },","    getFilter: function getFilter() {","      return filter;","    },","    hasFilter: function hasFilter() {","      return !!(0, _size2.default)(filter);","    }","  };","}"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"29":1,"31":1,"33":1,"35":6,"37":1,"39":1,"40":0,"42":1,"43":0,"44":0,"45":0,"49":1,"50":0,"52":0,"53":0,"56":0,"57":0,"58":0,"59":0,"60":0,"62":0,"63":0,"65":0,"66":0,"70":0,"73":0,"95":0,"96":0,"99":0,"100":0,"110":0,"120":0,"132":0,"133":0,"136":0,"137":0,"149":0,"150":0,"153":0,"154":0,"167":0,"168":0,"171":0,"174":0}},"/home/travis/build/npmtest/node-npmtest-bodybuilder/node_modules/bodybuilder/lib/aggregation-builder.js":{"path":"/home/travis/build/npmtest/node-npmtest-bodybuilder/node_modules/bodybuilder/lib/aggregation-builder.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":6,"18":1,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0},"b":{"1":[1,5],"2":[6,6],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":6,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":37}}},"2":{"name":"_defineProperty","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":42}}},"3":{"name":"aggregationBuilder","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":30}}},"4":{"name":"makeAggregation","line":42,"loc":{"start":{"line":42,"column":2},"end":{"line":42,"column":40}}},"5":{"name":"aggregation","line":109,"loc":{"start":{"line":109,"column":17},"end":{"line":109,"column":40}}},"6":{"name":"agg","line":120,"loc":{"start":{"line":120,"column":9},"end":{"line":120,"column":24}}},"7":{"name":"getAggregations","line":123,"loc":{"start":{"line":123,"column":21},"end":{"line":123,"column":48}}},"8":{"name":"hasAggregations","line":126,"loc":{"start":{"line":126,"column":21},"end":{"line":126,"column":48}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":43}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":47}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":55}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":53}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":61}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":43}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":51}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":35}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":43}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":37}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":32}},"14":{"start":{"line":31,"column":0},"end":{"line":31,"column":49}},"15":{"start":{"line":33,"column":0},"end":{"line":33,"column":61}},"16":{"start":{"line":35,"column":0},"end":{"line":35,"column":95}},"17":{"start":{"line":35,"column":39},"end":{"line":35,"column":93}},"18":{"start":{"line":37,"column":0},"end":{"line":37,"column":209}},"19":{"start":{"line":37,"column":44},"end":{"line":37,"column":195}},"20":{"start":{"line":37,"column":62},"end":{"line":37,"column":166}},"21":{"start":{"line":37,"column":176},"end":{"line":37,"column":193}},"22":{"start":{"line":37,"column":196},"end":{"line":37,"column":207}},"23":{"start":{"line":39,"column":0},"end":{"line":130,"column":1}},"24":{"start":{"line":40,"column":2},"end":{"line":40,"column":24}},"25":{"start":{"line":42,"column":2},"end":{"line":65,"column":3}},"26":{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},"27":{"start":{"line":44,"column":6},"end":{"line":44,"column":39}},"28":{"start":{"line":47,"column":4},"end":{"line":47,"column":95}},"29":{"start":{"line":48,"column":4},"end":{"line":48,"column":66}},"30":{"start":{"line":49,"column":4},"end":{"line":49,"column":65}},"31":{"start":{"line":50,"column":4},"end":{"line":50,"column":26}},"32":{"start":{"line":52,"column":4},"end":{"line":60,"column":5}},"33":{"start":{"line":53,"column":6},"end":{"line":53,"column":105}},"34":{"start":{"line":54,"column":6},"end":{"line":56,"column":7}},"35":{"start":{"line":55,"column":8},"end":{"line":55,"column":55}},"36":{"start":{"line":57,"column":6},"end":{"line":59,"column":7}},"37":{"start":{"line":58,"column":8},"end":{"line":58,"column":59}},"38":{"start":{"line":62,"column":4},"end":{"line":62,"column":125}},"39":{"start":{"line":64,"column":4},"end":{"line":64,"column":75}},"40":{"start":{"line":67,"column":2},"end":{"line":129,"column":4}},"41":{"start":{"line":110,"column":6},"end":{"line":110,"column":50}},"42":{"start":{"line":111,"column":6},"end":{"line":111,"column":18}},"43":{"start":{"line":121,"column":6},"end":{"line":121,"column":53}},"44":{"start":{"line":124,"column":6},"end":{"line":124,"column":26}},"45":{"start":{"line":127,"column":6},"end":{"line":127,"column":49}}},"branchMap":{"1":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":70},"end":{"line":35,"column":73}},{"start":{"line":35,"column":76},"end":{"line":35,"column":92}}]},"2":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":46},"end":{"line":35,"column":49}},{"start":{"line":35,"column":53},"end":{"line":35,"column":67}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":44},"end":{"line":37,"column":44}},{"start":{"line":37,"column":44},"end":{"line":37,"column":44}}]},"4":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":18},"end":{"line":47,"column":63}},{"start":{"line":47,"column":67},"end":{"line":47,"column":94}}]},"5":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"6":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":6},"end":{"line":54,"column":6}},{"start":{"line":54,"column":6},"end":{"line":54,"column":6}}]},"7":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":6},"end":{"line":57,"column":6}},{"start":{"line":57,"column":6},"end":{"line":57,"column":6}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _size = require('lodash/size');","","var _size2 = _interopRequireDefault(_size);","","var _isFunction = require('lodash/isFunction');","","var _isFunction2 = _interopRequireDefault(_isFunction);","","var _isPlainObject = require('lodash/isPlainObject');","","var _isPlainObject2 = _interopRequireDefault(_isPlainObject);","","var _isString = require('lodash/isString');","","var _isString2 = _interopRequireDefault(_isString);","","var _find = require('lodash/find');","","var _find2 = _interopRequireDefault(_find);","","exports.default = aggregationBuilder;","","var _utils = require('./utils');","","var _filterBuilder = require('./filter-builder');","","var _filterBuilder2 = _interopRequireDefault(_filterBuilder);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }","","function aggregationBuilder() {","  var aggregations = {};","","  function makeAggregation(type, field) {","    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {","      args[_key - 2] = arguments[_key];","    }","","    var aggName = (0, _find2.default)(args, _isString2.default) || 'agg_' + type + '_' + field;","    var opts = (0, _find2.default)(args, _isPlainObject2.default);","    var nested = (0, _find2.default)(args, _isFunction2.default);","    var nestedClause = {};","","    if ((0, _isFunction2.default)(nested)) {","      var nestedResult = nested(Object.assign({}, aggregationBuilder(), (0, _filterBuilder2.default)()));","      if (nestedResult.hasFilter()) {","        nestedClause.filter = nestedResult.getFilter();","      }","      if (nestedResult.hasAggregations()) {","        nestedClause.aggs = nestedResult.getAggregations();","      }","    }","","    var innerClause = Object.assign({}, _defineProperty({}, type, (0, _utils.buildClause)(field, null, opts)), nestedClause);","","    Object.assign(aggregations, _defineProperty({}, aggName, innerClause));","  }","","  return {","    /**","     * Add an aggregation clause to the query body.","     *","     * @param  {string|Object} type      Name of the aggregation type, such as","     *                                   `'sum'` or `'terms'`.","     * @param  {string}        field     Name of the field to aggregate over.","     * @param  {Object}        [options] (optional) Additional options to","     *                                   include in the aggregation.","     * @param  {string}        [name]    (optional) A custom name for the","     *                                   aggregation, defaults to","     *                                   `agg_<type>_<field>`.","     * @param  {Function}      [nest]    (optional) A function used to define","     *                                   sub-aggregations as children. This","     *                                   _must_ be the last argument.","     *","     * @return {bodybuilder} Builder.","     *","     * @example","     * bodybuilder()","     *   .aggregation('max', 'price')","     *   .build()","     *","     * bodybuilder()","     *   .aggregation('percentiles', 'load_time', {","     *     percents: [95, 99, 99.9]","     *   })","     *   .build()","     *","     * bodybuilder()","     *   .aggregation('date_range', 'date', {","     *     format: 'MM-yyy',","     *     ranges: [{ to: 'now-10M/M' }, { from: 'now-10M/M' }]","     *   })","     *   .build()","     *","     * bodybuilder()","     *   .aggregation('diversified_sampler', 'user.id', { shard_size: 200 }, (a) => {","     *     return a.aggregation('significant_terms', 'text', 'keywords')","     *   })","     *   .build()","     */","    aggregation: function aggregation() {","      makeAggregation.apply(undefined, arguments);","      return this;","    },","","","    /**","     * Alias for `aggregation`.","     *","     * @return {bodybuilder} Builder.","     */","    agg: function agg() {","      return this.aggregation.apply(this, arguments);","    },","    getAggregations: function getAggregations() {","      return aggregations;","    },","    hasAggregations: function hasAggregations() {","      return !!(0, _size2.default)(aggregations);","    }","  };","}"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"29":1,"31":1,"33":1,"35":6,"37":1,"39":1,"40":0,"42":1,"43":0,"44":0,"47":0,"48":0,"49":0,"50":0,"52":0,"53":0,"54":0,"55":0,"57":0,"58":0,"62":0,"64":0,"67":0,"110":0,"111":0,"121":0,"124":0,"127":0}},"/home/travis/build/npmtest/node-npmtest-bodybuilder/node_modules/bodybuilder/repl.js":{"path":"/home/travis/build/npmtest/node-npmtest-bodybuilder/node_modules/bodybuilder/repl.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":40}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":62}}},"branchMap":{},"code":["'use strict'","","var repl = require('repl')","var bodybuilder = require('./lib/index')","","repl.start('bodybuilder > ').context.bodybuilder = bodybuilder",""],"l":{"3":1,"4":1,"6":1}}}